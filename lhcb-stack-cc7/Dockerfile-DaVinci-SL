# vim:set ft=dockerfile:

ARG DAVINCI_VERSION=v45r3
ARG CMTVERSION=x86_64-centos7-gcc8-opt

FROM umdlhcb/lhcb-stack-cc7:DaVinci-${DAVINCI_VERSION} AS builder

# Make the ARG values defined in the previous stage accessible
ARG DAVINCI_VERSION
ARG CMTVERSION

##################
# Extend DaVinci #
##################

# FIXME: Workaround missing cmake config
ADD ./toolchain.cmake /opt/lhcb/lhcb/DAVINCI/DAVINCI_${DAVINCI_VERSION}

RUN mkdir -p /build
WORKDIR /build

# Check out TupleToolSemiLeptonic
RUN . /usr/local/bin/envset.sh && \
    git config --global user.name "Physicist" && \
    git config --global user.email "lhcb@physics.umd.edu" && \
    lb-dev DaVinci/${DAVINCI_VERSION} && \
    cd DaVinciDev_${DAVINCI_VERSION} && \
    git lb-use TupleToolSemiLeptonic https://github.com/umd-lhcb/TupleToolSemiLeptonic.git && \
    git lb-checkout TupleToolSemiLeptonic/0.2 Phys/TupleToolSemiLeptonic

# Compile TupleToolApplyIsolation
RUN . /usr/local/bin/envset.sh && \
    cd DaVinciDev_${DAVINCI_VERSION} && \
    make configure && make

# Remove unneeded generated files
RUN cd DaVinciDev_${DAVINCI_VERSION}/build.${CMTVERSION} && \
    rm -f apply-formatting compile_commands.json


FROM umdlhcb/lhcb-stack-cc7:DaVinci-${DAVINCI_VERSION}

ARG DAVINCI_VERSION
ARG CMTVERSION

RUN mkdir -p /build/DaVinciDev_${DAVINCI_VERSION}
# Copy the build DaVinci to current container
COPY --from=builder /build/DaVinciDev_${DAVINCI_VERSION}/build.${CMTVERSION} /build/DaVinciDev_${DAVINCI_VERSION}/build.${CMTVERSION}

# Update PATH in .zshrc
RUN echo "export PATH=/build/DaVinciDev_${DAVINCI_VERSION}/build.${CMTVERSION}:\${PATH}" >> /home/physicist/.zshrc
